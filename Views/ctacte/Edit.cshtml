@model CostosObras.Models.ctacte

@{
    ViewBag.Title = "Editar";
}

<h2>Editar</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Cuenta Corriente</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            @Html.LabelFor(model => model.fecha, "Fecha", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fecha, new { htmlAttributes = new { @class = "form-control datepicker" } })
                @Html.ValidationMessageFor(model => model.fecha, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.idconcepto, "Concepto", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("idconcepto", null, "---", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.idconcepto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.monto, "Monto", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.monto, new { htmlAttributes = new { @class = "form-control", data_val = "false" } })
                @Html.ValidationMessageFor(model => model.monto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.idproyecto, "Proyecto", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("idproyecto", null, "---", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.idproyecto, "", new { @class = "text-danger" })
            </div>
        </div>
        <input type="hidden" name="proyecto" id="proyecto" value="" />

        <div class="form-group">
            @Html.LabelFor(model => model.idproveedor, "Proveedor", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("idproveedor", null, "---", htmlAttributes: new { @class = "form-control", data_val = "false" })
                @Html.ValidationMessageFor(model => model.idproveedor, "", new { @class = "text-danger" })
            </div>
        </div>
        <input type="hidden" name="proveedor" id="proveedor" value="" />

        <div class="form-group">
            @Html.LabelFor(model => model.observacion, "Observacion", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.observacion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.observacion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Volver al listado", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


<script>
    $(function () { // will trigger when the document is ready
        $('.datepicker').datepicker({
            keepOpen: false,
            allowInputToggle: true,
            format: "MM/DD/YYYY"
        }).on('changeDate', function (e) {
            $(this).datepicker('hide');
        });
        $('#monto').keypress(function (event) {
            var $this = $(this);
            // this next line...
            if ((event.which != 44 || $this.val().indexOf(',') != -1) &&
                ((event.which < 48 || event.which > 57) &&
                    (event.which != 0 && event.which != 8))) {
                event.preventDefault();
            }

            var text = $(this).val();
            // this next line...
            if ((event.which == 44) && (text.indexOf(',') == -1)) {
                setTimeout(function () {
                    if ($this.val().substring($this.val().indexOf(',')).length > 3) {
                        $this.val($this.val().substring(0, $this.val().indexOf(',') + 3));
                    }
                }, 1);
            }

            if ((text.indexOf(',') != -1) &&
                (text.substring(text.indexOf(',')).length > 2) &&
                (event.which != 0 && event.which != 8) &&
                ($(this)[0].selectionStart >= text.length - 2)) {
                event.preventDefault();
            }
        });
        $('#idconcepto').select2();
        $('#idproyecto').select2({
            tags: true
        });
        $('#idproveedor').select2({
            tags: true
        });
        $("form").submit(function () {

            if ($("#idproveedor").select2('val') > 0) {
                $("#proveedor").val($("#idproveedor").select2('val') + "|" + $("#idproveedor option:selected").text());
            } else {
                $("#proveedor").val($("#idproveedor option:selected").text());
            }
            if ($("#idproyecto").select2('val') > 0) {
                $("#proyecto").val($("#idproyecto").select2('val') + "|" + $("#idproyecto option:selected").text());
            } else {
                $("#proyecto").val($("#idproyecto option:selected").text());
            }

        });
    });
</script>
