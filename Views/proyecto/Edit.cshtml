@model CostosObras.Models.proyecto

@{
    ViewBag.Title = "Editar";
}

<h2>Editar</h2>


@using (Html.BeginForm("edit", "proyecto", FormMethod.Post, new { enctype = "multipart/form-data"}))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Proyecto</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id)

    <div class="form-group">
        @Html.LabelFor(model => model.observacion, "Nombre", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.observacion, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.observacion, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.idcliente, "Cliente", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("idcliente", null, "---", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.idcliente, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.costototal, "Costo Total", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.costototal, new { htmlAttributes = new { @class = "form-control", data_val="false" } })
            @Html.ValidationMessageFor(model => model.costototal, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.costoreal, "Costo Real", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.costoreal, new { htmlAttributes = new { @class = "form-control", data_val="false"} })
            @Html.ValidationMessageFor(model => model.costoreal, "", new { @class = "text-danger" })
        </div>
    </div>
    
    <div class="form-group">
        @Html.LabelFor(model => model.archivo, "Archivo presupuesto", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="fileupload" class="custom-file-input" />
            @Html.ValidationMessageFor(model => model.archivo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.fechafin, "Fecha fin", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.fechafin, new { htmlAttributes = new { @class = "form-control datepicker" } })
            @Html.ValidationMessageFor(model => model.fechafin, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Guardar" class="btn btn-default" onclick="javascript=this.disabled = true; form.submit();" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Volver al listado", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>

    $(function () { // will trigger when the document is ready
        $('.datepicker').datepicker({
            keepOpen: false,
            allowInputToggle: true,
            format: "DD/MM/YYYY"
        }).on('changeDate', function (e) {
            $(this).datepicker('hide');
        });
        $('#costoreal,#costototal').keypress(function (event) {
            var $this = $(this);
            // this next line...
            if ((event.which != 44 || $this.val().indexOf(',') != -1) &&
                ((event.which < 48 || event.which > 57) &&
                    (event.which != 0 && event.which != 8))) {
                event.preventDefault();
            }

            var text = $(this).val();
            // this next line...
            if ((event.which == 44) && (text.indexOf(',') == -1)) {
                setTimeout(function () {
                    if ($this.val().substring($this.val().indexOf(',')).length > 3) {
                        $this.val($this.val().substring(0, $this.val().indexOf(',') + 3));
                    }
                }, 1);
            }

            if ((text.indexOf(',') != -1) &&
                (text.substring(text.indexOf(',')).length > 2) &&
                (event.which != 0 && event.which != 8) &&
                ($(this)[0].selectionStart >= text.length - 2)) {
                event.preventDefault();
            }
        });
    });
</script>
